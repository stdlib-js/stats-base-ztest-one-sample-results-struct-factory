{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar struct = require( '@stdlib/dstructs-struct' );\n\n\n// MAIN //\n\n/**\n* Returns a new struct constructor tailored to a specified floating-point data type.\n*\n* @param {string} dtype - floating-point data type\n* @returns {Function} struct constructor\n*\n* @example\n* var Struct = factory( 'float64' );\n* // returns <Function>\n*\n* var s = new Struct();\n* // returns <Struct>\n*/\nfunction factory( dtype ) {\n\tvar schema = [\n\t\t{\n\t\t\t'name': 'rejected',\n\t\t\t'description': 'boolean indicating whether the null hypothesis was rejected',\n\t\t\t'type': 'bool',\n\t\t\t'castingMode': 'none'\n\t\t},\n\t\t{\n\t\t\t'name': 'alternative',\n\t\t\t'description': 'alternative hypothesis',\n\t\t\t'type': 'int8',\n\t\t\t'castingMode': 'none'\n\t\t},\n\t\t{\n\t\t\t'name': 'alpha',\n\t\t\t'description': 'significance level',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'pValue',\n\t\t\t'description': 'p-value',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'statistic',\n\t\t\t'description': 'test statistic',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'ci',\n\t\t\t'description': 'confidence interval',\n\t\t\t'type': dtype,\n\t\t\t'length': 2,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'nullValue',\n\t\t\t'description': 'null value',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'sd',\n\t\t\t'description': 'standard error of the mean',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t}\n\t];\n\treturn struct( schema );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a new struct constructor tailored to a specified floating-point data type.\n*\n* @module @stdlib/stats-base-ztest-one-sample-results-struct-factory\n*\n* @example\n* var structFactory = require( '@stdlib/stats-base-ztest-one-sample-results-struct-factory' );\n*\n* var Struct = structFactory( 'float64' );\n* // returns <Function>\n*\n* var s = new Struct();\n* // returns <Struct>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,yBAA0B,EAkBhD,SAASC,EAASC,EAAQ,CACzB,IAAIC,EAAS,CACZ,CACC,KAAQ,WACR,YAAe,8DACf,KAAQ,OACR,YAAe,MAChB,EACA,CACC,KAAQ,cACR,YAAe,yBACf,KAAQ,OACR,YAAe,MAChB,EACA,CACC,KAAQ,QACR,YAAe,qBACf,KAAQD,EACR,YAAe,aAChB,EACA,CACC,KAAQ,SACR,YAAe,UACf,KAAQA,EACR,YAAe,aAChB,EACA,CACC,KAAQ,YACR,YAAe,iBACf,KAAQA,EACR,YAAe,aAChB,EACA,CACC,KAAQ,KACR,YAAe,sBACf,KAAQA,EACR,OAAU,EACV,YAAe,aAChB,EACA,CACC,KAAQ,YACR,YAAe,aACf,KAAQA,EACR,YAAe,aAChB,EACA,CACC,KAAQ,KACR,YAAe,6BACf,KAAQA,EACR,YAAe,aAChB,CACD,EACA,OAAOF,EAAQG,CAAO,CACvB,CAKAJ,EAAO,QAAUE,IC7DjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "struct", "factory", "dtype", "schema", "main"]
}
