{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport struct from '@stdlib/dstructs-struct';\n\n\n// MAIN //\n\n/**\n* Returns a new struct constructor tailored to a specified floating-point data type.\n*\n* @param {string} dtype - floating-point data type\n* @returns {Function} struct constructor\n*\n* @example\n* var Struct = factory( 'float64' );\n* // returns <Function>\n*\n* var s = new Struct();\n* // returns <Struct>\n*/\nfunction factory( dtype ) {\n\tvar schema = [\n\t\t{\n\t\t\t'name': 'rejected',\n\t\t\t'description': 'boolean indicating whether the null hypothesis was rejected',\n\t\t\t'type': 'bool',\n\t\t\t'castingMode': 'none'\n\t\t},\n\t\t{\n\t\t\t'name': 'alternative',\n\t\t\t'description': 'alternative hypothesis',\n\t\t\t'type': 'int8',\n\t\t\t'castingMode': 'none'\n\t\t},\n\t\t{\n\t\t\t'name': 'alpha',\n\t\t\t'description': 'significance level',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'pValue',\n\t\t\t'description': 'p-value',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'statistic',\n\t\t\t'description': 'test statistic',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'ci',\n\t\t\t'description': 'confidence interval',\n\t\t\t'type': dtype,\n\t\t\t'length': 2,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'nullValue',\n\t\t\t'description': 'null value',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t},\n\t\t{\n\t\t\t'name': 'sd',\n\t\t\t'description': 'standard error of the mean',\n\t\t\t'type': dtype,\n\t\t\t'castingMode': 'mostly-safe'\n\t\t}\n\t];\n\treturn struct( schema );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n"],"names":["factory","dtype","struct","name","description","type","castingMode","length"],"mappings":";;mFAwCA,SAASA,EAASC,GAoDjB,OAAOC,EAnDM,CACZ,CACCC,KAAQ,WACRC,YAAe,8DACfC,KAAQ,OACRC,YAAe,QAEhB,CACCH,KAAQ,cACRC,YAAe,yBACfC,KAAQ,OACRC,YAAe,QAEhB,CACCH,KAAQ,QACRC,YAAe,qBACfC,KAAQJ,EACRK,YAAe,eAEhB,CACCH,KAAQ,SACRC,YAAe,UACfC,KAAQJ,EACRK,YAAe,eAEhB,CACCH,KAAQ,YACRC,YAAe,iBACfC,KAAQJ,EACRK,YAAe,eAEhB,CACCH,KAAQ,KACRC,YAAe,sBACfC,KAAQJ,EACRM,OAAU,EACVD,YAAe,eAEhB,CACCH,KAAQ,YACRC,YAAe,aACfC,KAAQJ,EACRK,YAAe,eAEhB,CACCH,KAAQ,KACRC,YAAe,6BACfC,KAAQJ,EACRK,YAAe,gBAIlB"}